@model MembershipUser

@{
    ViewBag.Title = "User Details -" + Model.UserName;
    ProfileCommon userProfile = (ProfileCommon)ProfileCommon.Create(Model.UserName, true);
}

<h2>User Details <small style="color:#808080">@Html.DisplayFor(model => model.UserName)</small></h2>
@if (Model.UserName == Membership.GetUser().UserName) {
    @Html.ActionLink("Change Password", "ChangePassword");
}
<table>
    <tr><td><b>Username</b></td><td>@Html.DisplayFor(model => model.UserName)</td></tr>
    <tr>
        <td><b>Account Status</b></td>
        <td>
            @if (Model.IsLockedOut)
            {
                <span>Locked (User is not allowed to login)</span>
            }
            else
            {
                <span>Active</span>
            }
        </td>
    </tr>
    <tr><td><b>E-Mail</b></td><td>@Html.DisplayFor(model => model.Email)</td></tr>
    <tr><td><b>Phone</b></td><td>@Html.Raw(userProfile.PhoneNumber)</td></tr>
    <!--<tr>
        <td><b>Job</b></td>
        <td>
            @{}//Html.Raw(((PJCAdmin.Models.Routine)ViewData["SelectedRoutine"]).routineTitle)
        </td>
    </tr>-->
    <tr>
        <td><b>User Type</b></td>
        <td>
            @foreach (string role in Roles.GetRolesForUser(Model.UserName))
            {
                @role
            }

        </td>
    </tr>

    @if (Roles.IsUserInRole(Model.UserName, "Job Coach"))
    {
        <tr>
            <td><b>Assigned Users</b></td>
        </tr>

        if (((List<MembershipUser>)ViewData["AssignedUsersNew"]).Count > 0)
        {

            for (int i = 0; i < ((List<MembershipUser>)ViewData["AssignedUsersNew"]).Count; i++)
                    {
                <tr>
                    <td>
                        @Html.ActionLink(((List<MembershipUser>)ViewData["AssignedUsersNew"]).ElementAt(i).UserName, "Details", new { user = ((List<MembershipUser>)ViewData["AssignedUsersNew"]).ElementAt(i).UserName })
                        <br />
                    </td>
                </tr>
                <tr>
                    <td><b>Jobs Assigned</b><br /></td>
                </tr>
                <tr>
                    <td>
                        @Html.ActionLink("Job 1 Sample", "", "")
                        <br />
                        <br />
                    </td>
                </tr>

            }

        }

        else
        {

        }

    }

    @if (Roles.IsUserInRole(Model.UserName, "Parent"))
            {
        <tr>
            <td><b>Children</b></td>
        </tr>
        if (((List<MembershipUser>)ViewData["Children"]).Count > 0)
        {

            for (int i = 0; i < ((List<MembershipUser>)ViewData["Children"]).Count; i++)
            {
                <tr>
                    <td>
                        @Html.ActionLink(((List<MembershipUser>)ViewData["Children"]).ElementAt(i).UserName, "Details", new { user = ((List<MembershipUser>)ViewData["Children"]).ElementAt(i).UserName })
                        <br />
                    </td>
                </tr>
                        <tr>
                            <td><b>Jobs Assigned</b><br /></td>
                        </tr>
                        <tr>
                            <td>
                                @Html.ActionLink("Job 1 Sample", "", "")
                                <br />
                                <br />
                            </td>
                        </tr>
            }
        }
        else
        {

        }
    }

    @if (Roles.IsUserInRole(Model.UserName, "User"))
            {
                if ((MembershipUser)ViewData["Job Coach"] != null)
                {
            <tr>
                <td><b>Job Coach</b></td>
                <td>
                    @Html.ActionLink(((MembershipUser)ViewData["Job Coach"]).UserName, "Details", new { user = ((MembershipUser)ViewData["Job Coach"]).UserName })
                    <br />
                </td>
            </tr>
                    <tr>
                        <td><b>Jobs Assigned By</b></td>
                        <td>
                            @ViewData["Job Coach"]
                            <br />
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.ActionLink("Job 1 Sample", "", "")
                            <br />
                        </td>
                    </tr>
        }
        if ((MembershipUser)ViewData["Parent"] != null)
        {
            <tr>
                <td><b>Parent</b></td>
                <td>
                    @Html.ActionLink(((MembershipUser)ViewData["Parent"]).UserName, "Details", new { user = ((MembershipUser)ViewData["Parent"]).UserName })
                    <br />
                </td>
            </tr>
                    <tr>
                        <td><b>Jobs Assigned By</b></td>
                        <td>
                            @ViewData["Parent"]
                            <br />
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.ActionLink("Job 1 Sample", "", "")
                            <br />
                        </td>
                    </tr>
                    }
                    }
                </table>
<!--
<p>
    @{}//Html.ActionLink("Assigned Tasks", "AssignedTasks", new { user = Model.UserName })
</p>
    -->

<p>
    @Html.ActionLink("Edit", "Edit", new { user = Model.UserName }) |
    @Html.ActionLink("Back to User List", "List")
</p>