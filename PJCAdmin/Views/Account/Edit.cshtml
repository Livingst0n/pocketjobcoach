@model MembershipUser
@{
    ViewBag.Title = "Edit";

    ProfileCommon userProfile = (ProfileCommon) ProfileCommon.Create(Model.UserName, true);
}

<h2>Edit User</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()

    <fieldset>
        <ol>
            <li>
                @Html.LabelFor(m => m.UserName)
                @Html.DisplayFor(m => m.UserName)
                @Html.HiddenFor(m => m.UserName)
            </li>
            <li>
                @Html.LabelFor(m => m.Email)
                @if (Roles.IsUserInRole("Administrator"))
                {
                    @Html.TextBoxFor(m => m.Email)
                }
                else
                {
                    @Model.Email
                    @Html.HiddenFor(m => m.Email)
                }
            </li>
            <li>
                <label>Phone Number</label>
                <input type="text" name="phonenumber" value="@userProfile.PhoneNumber" />
            </li>
            <li>
                <label>User Type</label>
                @if (Roles.IsUserInRole("Administrator"))
                {
                    <select name="usertype" class="form-control">
                        @foreach (string role in Roles.GetAllRoles())
                        {
                            if (Roles.IsUserInRole(Model.UserName, role))
                            {
                                <option value="@role" selected>@role</option>
                            }
                            else
                            {
                                <option value="@role">@role</option>
                            }
                        }
                    </select>
                }
                else
                {
                    @Roles.GetRolesForUser()[0]
                    <input type="hidden" name="usertype" value="@Roles.GetRolesForUser()[0]"/>
                }
            </li>
            <li>
                <label>Job</label>
                <select name="job" id="selectjob">
                    <option value="">None</option>
                    @for (int i = 0; i < ((List<PJCAdmin.Models.job>)ViewData["Jobs"]).Count; i++)
                    {
                        
                        <option value="@(((List<PJCAdmin.Models.job>)ViewData["Jobs"]).ElementAt(i).jobID)" @if (((PJCAdmin.Models.job)ViewData["SelectedJob"]).jobID == ((List<PJCAdmin.Models.job>)ViewData["Jobs"]).ElementAt(i).jobID) { @Html.Raw("selected")} >
                            @Html.Label(((List<PJCAdmin.Models.job>)ViewData["Jobs"]).ElementAt(i).jobTitle)
                        </option>
                    }
                </select>
                <label>Apply Template Tasks <input type="checkbox" name="applyJobTemplate" value="true" /></label>
            </li>
            <li style="margin-top:20px;"><label>Assigned Users</label></li>
            <li>
                <ul id="assignedUsersList">
                    @if (((List<PJCAdmin.Models.User>)ViewData["SelectedUsers"]).Count > 0)
                    {
                        for (int i = 0; i < ((List<PJCAdmin.Models.User>)ViewData["SelectedUsers"]).Count; i++)
                        {
                            <li>
                                @(((List<PJCAdmin.Models.User>)ViewData["SelectedUsers"]).ElementAt(i).UserName)
                                @if (Roles.IsUserInRole("Administrator"))
                                {
                                    <span>&nbsp; &nbsp;</span><button class="remove-user" data-taskid="@(((List<PJCAdmin.Models.User>)ViewData["SelectedUsers"]).ElementAt(i).UserId)" data-selected="false"><i class="fa fa-trash"></i></button>
                                }
                                @Html.Hidden("selectedUsers[" + i + "]",((List<PJCAdmin.Models.User>) ViewData["SelectedUsers"]).ElementAt(i).UserId)
                            </li>
                        }
                    }
                    else
                    {
                        <li id="nousers" style="color:#999"><i>No Assigned Users</i></li>
                    }
                </ul>
            </li>
            @if (Roles.IsUserInRole("Administrator"))
            {
                <li style="margin-top:20px;">
                    <select name="selectAddUsers" id="selectAddUsers">
                        @for (int i = 0; i < ((List<PJCAdmin.Models.User>)ViewData["Users"]).Count; i++)
                        {
                            <option value="@(((List<PJCAdmin.Models.User>)ViewData["Users"]).ElementAt(i).UserId)">
                                @Html.Label(((List<PJCAdmin.Models.User>)ViewData["Users"]).ElementAt(i).UserName)
                            </option>
                        }
                    </select>
                    <button id="addUser">Assign User</button>
                </li>
            }
        </ol>
        <input type="submit" value="Save" />
    </fieldset>
}

<script>
    $(function () {
        $('#addUser').on('click', function (e) {
            e.preventDefault();
            e.stopPropagation();
            if ($('#nousers').size() > 0)
                $('#nousers').remove();
            var id = $('#selectAddUsers').val();
            var name = $('#selectAddUsers option:selected').html();
            $('#assignedUsersList').append('<li>' + name + '&nbsp; &nbsp;<button class="remove-user"><i class="fa fa-trash"></i></button><input type="hidden" name="selectedUsers[' + ($('#assignedUsersList').size()-1).toString() + ']"  value="' + id + '" /></li>')
        });

        $('#assignedUsersList').on('click', '.remove-user', function (e) {
            e.preventDefault();
            e.stopPropagation();
            $(this).parent().remove();
            if ($('#assignedUsersList').children().size() == 0) {
                $('#assignedUsersList').append('<li id="nousers" style="color:#999"><i>No Assigned Users</i></li>');
            }
        });
    });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<p>
    @Html.ActionLink("Back to User Details", "Details", new { user = Model.UserName }) |
    @Html.ActionLink("Back to List", "List")
</p>
