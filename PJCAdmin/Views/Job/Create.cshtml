@model PJCAdmin.Models.job

@{
    ViewBag.Title = "Create";
}

<script type="text/javascript">
    function AddAllTasks() {
        var rowCount = $('#allTasksList li').length;
        var index = rowCount + 1;
        $('#myteams').append("<tr><td><input type='hidden' name='teams.Index' value='" + index + "' /><input type='text' name='teams[" + index + "].TeamName' /></td><td><input type='text'  name='teams[" + index + "].Country'/></td></tr>");
    }
</script>

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>job</legend>

        <div class="editor-label">
            <!--@Html.LabelFor(model => model.jobTitle)-->
            <h3>Job Title:</h3>
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.jobTitle)
            @Html.ValidationMessageFor(model => model.jobTitle)
        </div>
        <h3>Assigned Tasks:</h3>
        <br />
        <select size="5" style="margin-left:25px; padding:5px;">
            <option value="Task1">Task 1 is a long one to show scaleability</option>
            <option value="Task2">Task 2</option>
            <option value="Task3">Task 3</option>
            <option value="Task4">Task 4</option>
        </select>
        <br />
        <br />
        <fieldset>
            <h3>Search Tasks:</h3>
            <input />
            <br />

            <h3>Available Tasks:</h3>
            <ul id="allTasksList" style="list-style:none;">
                
                @*@foreach (PJCAdmin.Models.task item in (List<PJCAdmin.Models.task>)ViewData["Tasks"])
                {
                    @Html.Partial("_taskList", item)
                    
                }*@
                @for(int i = 0; i < ((List<PJCAdmin.Models.task>)ViewData["Tasks"]).Count; i++){
                    <li>
                        @Html.Label(((List<PJCAdmin.Models.task>)ViewData["Tasks"]).ElementAt(i).taskName)
                        &nbsp; &nbsp;<button class="task" data-taskID="@((List<PJCAdmin.Models.task>)ViewData["Tasks"]).ElementAt(i).taskID" data-selected="false">Add</button>
                        @Html.CheckBox("taskList["+i+"]", false, new Dictionary<string, object> { { "value", ((List<PJCAdmin.Models.task>)ViewData["Tasks"]).ElementAt(i).taskID }, {"style","display:none;"}})
                    </li>
                }
            </ul>


        </fieldset>
        <br />
        <p>
            <input type="submit" value="Create Job" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    $(function () {
        $('button.task').on('click', function (e) {
            e.preventDefault();
            e.stopPropagation();
            if ($(this).data("selected") == "true") {
                $(this).data("selected", "false");
                $(this).html("Add");
                $('input[type="checkbox"]', $(this).parent()).attr("checked", false);
            } else {
                $(this).data("selected", "true");
                $(this).html("Remove");
                $('input[type="checkbox"]', $(this).parent()).attr("checked", true);
            }
        })
    })
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
