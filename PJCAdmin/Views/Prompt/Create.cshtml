@model PJCAdmin.Models.prompt

@{
    ViewBag.Title = "Create";
}

<h2>Create Prompt for <i>@ViewBag.task.taskName</i></h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>prompt</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.typeID, "Prompt Type")
        </div>
        <div class="editor-field">
            @Html.DropDownList("typeID", String.Empty)
            @Html.ValidationMessageFor(model => model.typeID)
        </div>
     
        @*<div class="editor-label">
            @Html.LabelFor(model => model.taskID)
        </div>

        <div class="editor-field">
            @Html.EditorFor(model => model.taskID)
        </div>*@
        @Html.HiddenFor(model => model.taskID, new { Value = ViewBag.task.taskID })

        @*<div class="editor-label">
            @Html.LabelFor(model => model.taskID, "task")
        </div>
        <div class="editor-field">
            @Html.DropDownList("taskID", (string)ViewBag.task.taskName)
            @Html.ValidationMessageFor(model => model.taskID)
        </div>*@

        <div class="editor-label">
            @Html.LabelFor(model => model.title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.title)
            @Html.ValidationMessageFor(model => model.title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.description)
            @Html.ValidationMessageFor(model => model.description)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { id = ViewBag.task.taskID })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
